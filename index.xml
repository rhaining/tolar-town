<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tolar Town</title>
    <link>https://tolar.town/</link>
    <description>Recent content on Tolar Town</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Aug 2023 17:10:10 -0400</lastBuildDate>
    
        <atom:link href="https://tolar.town/index.xml" rel="self" type="application/rss+xml" />
    
    
      
      

        <item>
          <title>Presidential Hopefuls: 2024 Edition</title>
          <link>https://tolar.town/posts/2023/08/16/presidential-hopefuls/</link>
          <pubDate>Wed, 16 Aug 2023 17:10:10 -0400</pubDate>
          
          <guid>https://tolar.town/posts/2023/08/16/presidential-hopefuls/</guid>
          <description>&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2023/08/16/presidential-hopefuls/logo.png&#34; alt=&#34;Presidential Hopefuls logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;Tl;dr: I built a thing. &lt;a href=&#34;https://kindofawesome.com/screensaver/presidential_hopefuls/&#34;&gt;Download it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next week is the first debate in this season of presidential hopefuls. The frontrunner has been indicted under dozens of counts in multiple jurisdictions. We could see multiple trials and maybe even multiple convictions between now and November 2024. We certainly will see many primaries, debates, gaffes, and scandals.&lt;/p&gt;
&lt;p&gt;Which seems like the perfect time to launch the reboot of the successful 2020 era Presidential Hopefuls screensaver (for Mac!)!&lt;/p&gt;
&lt;p&gt;It is a hopeless task to keep up with all the news of this race. It is even more hopeless to try to keep track of the various polls: who&amp;rsquo;s in the lead? Who&amp;rsquo;s moving up or down the ladder in the psyches of potential American voters? What wild combination of candidates will polling firms pose to us next?&lt;/p&gt;
&lt;p&gt;Presidential Hopefuls solves all these problems and more. By using data sourced from our friends over at FiveThirtyEight, we are able to provide a unique visualization of how these men (and women!) are doing against each other. We cycle through each set of polling data, and then we size and rank each candidate according to how they did in that poll. We utilize polling quality data from FiveThirtyEight to inform how long a poll will be up on your screen.&lt;/p&gt;
&lt;p&gt;We display each candidate as a disembodied head to remind you of the farce and absurdity of it all. The classic DVD logo screensaver of yore inspires our candidates to bounce around the screen, for what could be better than one bouncing head than several? Larger heads can plow through the smaller ones, just like they will inevitably also do on the debate stage and in the press. Occasionally, there is a bout of frenetic energy as heads try to escape other heads. This beautiful feature allows you to visualize what it might be like to run your own race to be President of the United States of America.&lt;/p&gt;
&lt;p&gt;We the people of the USA come together every four years to elect our President. (Well, I guess we elect electors who elect our President, but that&amp;rsquo;s for another day.) I hope this screensaver may provide you some levity during the brutal process we are all to endure over the next 15 months or so.&lt;/p&gt;
&lt;p&gt;For screensavers matter now, more than ever.&lt;/p&gt;
&lt;p&gt;Tysm.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kindofawesome.com/screensaver/presidential_hopefuls/&#34;&gt;Please to download&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Robert Tolar Haining&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>

      
    
      
      

        <item>
          <title>2010: The days before the iPad</title>
          <link>https://tolar.town/posts/2020/08/29/the-days-before-the-ipad/</link>
          <pubDate>Sat, 29 Aug 2020 18:28:00 -0400</pubDate>
          
          <guid>https://tolar.town/posts/2020/08/29/the-days-before-the-ipad/</guid>
          <description>&lt;p&gt;&lt;em&gt;January 27, 2010&lt;/em&gt; &lt;!-- raw HTML omitted --&gt;
Steve Jobs announced to the world a new product: the iPad. I had been the lead developer for a burgeoning motley crew of software developers learning on the job how to create iPhone apps at the storied magazine powerhouse Cond√© Nast. Our biggest success by far had been Epicurious, which allowed folks to find recipes on the go, build shopping lists, and then cook those recipes at home (RIP printers). We had also published GQ Magazine on the iPhone, the first of its kind, with both a digital native interface to make reading easier on a small phone, but also the full-fledged PDF rendering of the glossy print version. This was a far cry from my previous work at Cond√©: building Facebook and MySpace apps (lol, remember those?) for a small team that didn&amp;rsquo;t survive the 2008 round of layoffs at the company. I had learned a new language (Objective-C, the original programming language for iPhone apps) and had emerged from working on a new type of product as the sole engineer to leading development on a few apps with a bigger team.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/08/29/the-days-before-the-ipad/Steve_Jobs-iPad_launch.jpg&#34; alt=&#34;Steve Jobs with the Apple iPad&#34;&gt;
&lt;em&gt;Steve Jobs launching the iPad,&lt;/em&gt; üì∑ &lt;em&gt;&lt;a href=&#34;https://twitter.com/ejacqui&#34;&gt;Jacqui Cheng&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With the announcement of the iPad, we immediately shifted focus and thought about what Cond√© Nast might mean on this new tablet device. Was it a large iPhone? A small laptop? Something else entirely? Our initial inclination was that it would be perfect for magazines. Readers would love getting GQ on their iPad. Right?! For me, it was both a creative opportunity to help rethink these apps and deliver them to a larger audience, but also professionally I would help lead a team of several engineers working with designers, product managers, editorial, and publishing, all working within one of the shortest deadlines we had seen.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;January 30, 2010&lt;/em&gt; &lt;!-- raw HTML omitted --&gt;
&lt;em&gt;(three days after the iPad announcement)&lt;/em&gt; &lt;!-- raw HTML omitted --&gt;
Early on a Saturday morning, I received a phone call from my good friend Jay. It was maybe 8am, I ignored the call and went back to sleep. But I somehow already knew what had happened. Jay lived in Seattle at the time, so it was close to 5am there. I woke up a bit later and returned his call. That was when I found out that one of my best friends Trey had died in a car accident in the wee hours of the morning. Jolted from my anticipated lazy Saturday after a rollercoaster ride of a work week, I curled up into a little ball on my couch and barely moved until I had to go to work the following Monday morning. I watched countless hours of Doctor Who (one of Trey&amp;rsquo;s favorite shows, which he had introduced me to), drank a fair amount of whiskey, and cried and cried and cried.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/08/29/the-days-before-the-ipad/trey-rob.jpg&#34; alt=&#34;Trey and me&#34;&gt;
&lt;em&gt;Trey and me&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I flew down to Atlanta to meet up with some friends to drive to Little Rock for the funeral, while the team at Cond√© Nast continued work on the iPad apps. I had been nervous to tell my boss I would need to leave town, but she was immediately understanding and helped cover me while I was out. Back in Atlanta, I met up at my friend&amp;rsquo;s house to have breakfast and caravan to Little Rock, but one friend did not have time to eat, so we made her a bacon, egg, &amp;amp; cheese sandwich. We put it in the car with the rest of everyone&amp;rsquo;s stuff, but the sandwich was never to be seen again. My friends and I are all still convinced that the ghost of Trey made off with that bacon, egg, &amp;amp; cheese sandwich. He would have loved it.&lt;/p&gt;
&lt;p&gt;Later that day, we had been driving for a bit down I-20 towards Little Rock, and we were traveling through Alabama, when we realized that we were certainly going to be late for the &amp;ldquo;viewing&amp;rdquo; that evening. Suddenly, we all collectively realized that Little Rock is indeed not in the Eastern time zone and is an hour behind Atlanta. We had plenty of time to get checked in, change into our &amp;ldquo;Sunday best&amp;rdquo;, and drive over to the funeral home.&lt;/p&gt;
&lt;p&gt;We spent a few days in Little Rock, bonding with his family and his college friends, most of whom we had not met before. With the viewing over, the funeral complete, some late night memorializing at his Aunt&amp;rsquo;s house, and some even later night dancing out at Little Rock&amp;rsquo;s finest warehouse clubs, we drove back to Atlanta. I arrived back at my parents&amp;rsquo; house in time to see the end of the Super Bowl, before flying back to New York City the next day.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Back at home, I was a little disoriented in my life, still processing the loss of a good friend. I doubled down and focused 110% on work to help fill my time. I was working with some of the best people around, and personally I was happy to spend late nights and long weeks engrossed in building iPad apps.&lt;/p&gt;
&lt;p&gt;I was happy to have a distraction when our Developer Relations Manager from Apple, let&amp;rsquo;s call him Ralph, came to pay us a visit. We collaborated with Ralph on how Cond√© could adapt to this new tablet interface. After telling him our plans to focus on publishing GQ on the iPad, he had one response: &amp;ldquo;Steve really likes Epicurious.&amp;rdquo; A few beats of silence passed as it sunk in that the man who only needs one name (in this context at least) had offered us guidance. The man behind the company who had revolutionized mobile phones and who unwittingly had radically pivoted my career to building iPhone apps.&lt;/p&gt;
&lt;p&gt;Based on our history of building dope iPhone apps at Cond√©, Apple offered to loan us a few iPads before they were released to the public, so we could get a real feel for them and build the best products we could build. Codenamed &amp;ldquo;K48&amp;rdquo;, the iPads were locked to a table in a room at the Cond√© Nast Digital offices (then located a few blocks from the company headquarters at 4 Times Square). The room&amp;rsquo;s windows were covered up with craft paper, so no one could peer in from any nearby skyscrapers, and the room had a coded lock on the door, to which only a small group of trusted engineers, designers, and product managers could access.&lt;/p&gt;
&lt;p&gt;The caveat was that we had to have the apps ready to go before the iPad&amp;rsquo;s release date of April 3. We worked hard. Harder than we had ever worked. With the unexpected passing of my dear friend, I was happy to fill up my days and nights and weekends with work that was interesting, novel, and that people would end up appreciating. It also helped the team that we had carte blanche from the president of Cond√© Nast Digital to order food and take cars home when we were there late (a true rarity on the digital side, regardless of what you may have heard about the extravagance at publications like Vogue or Gourmet).&lt;/p&gt;
&lt;p&gt;We somehow managed to develop and ship iPad apps for both GQ Magazine and Epicurious, both of which were total rethinks of how people would interact with these products on the larger screen. We were there with Apple at launch when the first iPads were released. The first certified magazine on a tablet and one of the best recipe apps.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/08/29/the-days-before-the-ipad/Steve_Jobs-Epicurious.jpg&#34; alt=&#34;Steve Jobs promoting the Epicurious iPad app&#34;&gt;
&lt;em&gt;Steve Jobs promoting the Epicurious iPad app&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I will always remember my friend Trey. How great a friend he was. How he could light up the room and convince everyone to dance. Weird as it may be, the iPad launch helped get me through a rough patch. The iPad has gone on to be a revolutionary product, while the memory of Trey lives on in his friends and family. The two will forever be intertwined for me. I&amp;rsquo;ll never forget the great pain that time held, nor will I forget the great excitement.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to &lt;a href=&#34;https://twitter.com/ejacqui&#34;&gt;Jacqui Cheng&lt;/a&gt; giving me early feedback on this post.&lt;/em&gt;&lt;/p&gt;
</description>
        </item>

      
    
      
      

        <item>
          <title>Let a million screensavers bloom</title>
          <link>https://tolar.town/posts/2020/04/13/screensavers/</link>
          <pubDate>Mon, 13 Apr 2020 17:04:00 -0400</pubDate>
          
          <guid>https://tolar.town/posts/2020/04/13/screensavers/</guid>
          <description>&lt;p&gt;This is nominally a &amp;ldquo;travel blog&amp;rdquo;, or something, but I also write code, and sometimes screensavers, so I thought I&amp;rsquo;d try putting this out there to see how it goes. Let me know what you think! &lt;a href=&#34;mailto:mail@tolar.town&#34;&gt;mail@tolar.town&lt;/a&gt; or on twitter &lt;a href=&#34;https://twitter.com/tolar&#34;&gt;@tolar&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Writing screensavers for macs is a little weird. But once you get past a few oddities, it can be lots of fun!&lt;/p&gt;
&lt;p&gt;For purposes of this post, I assume you have some knowledge of and experience with Xcode and Swift. We&amp;rsquo;ll build a simple screensaver that spins a green square.&lt;/p&gt;
&lt;p&gt;If you want to go ahead and download the complete source, you can find it &lt;a href=&#34;https://github.com/rhaining/screensaver-demo&#34;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;setup-your-project&#34;&gt;Setup your project&lt;/h1&gt;
&lt;p&gt;Let&amp;rsquo;s start with your Xcode project setup before we dive in to code: File -&amp;gt; New project. In the project template selection screen, select macOS -&amp;gt; Screen Saver.&lt;/p&gt;
&lt;p&gt;![Project selection](/posts/2020/04/13/screensavers/1. project selection.png)
&lt;em&gt;Project selection&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Continue with setup until you have a project. Xcode will generate an Objective-c subclass of &lt;code&gt;ScreenSaverView&lt;/code&gt; for you, but that&amp;rsquo;s no fun. Swift is the new hot thing, right? Go ahead and delete those files (&lt;code&gt;***View.h&lt;/code&gt; and &lt;code&gt;***View.m&lt;/code&gt;). Create a new Swift file. Here we call it &lt;code&gt;GreenSquareScreenSaverView&lt;/code&gt;, but you can name it as you please. (Note: if you change the name of the class, be sure to also update it in your Info.plist &amp;ldquo;Principal class&amp;rdquo; key.) You can use this stub code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Foundation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ScreenSaver&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GreenSquareScreenSaverView&lt;/span&gt;: ScreenSaverView {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;?(frame: CGRect, isPreview: Bool) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;(frame: frame, isPreview: isPreview)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;self&lt;/span&gt;.animationTimeInterval = &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;required&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;?(coder: NSCoder) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fatalError(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;init(coder:) has not been implemented&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;startAnimation&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.startAnimation()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stopAnimation&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.stopAnimation()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;_&lt;/span&gt; rect: NSRect) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.draw(rect)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animateOneFrame&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Congrats, you have a functional screensaver! It might not do much apart from showing a blank screen, but it&amp;rsquo;ll build.&lt;/p&gt;
&lt;h1 id=&#34;install-your-screensaver&#34;&gt;Install your screensaver&lt;/h1&gt;
&lt;p&gt;One major difference between screensavers and apps is that you can&amp;rsquo;t simply &amp;ldquo;Run&amp;rdquo; from Xcode. To install the screensaver:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build from Xcode.&lt;/li&gt;
&lt;li&gt;Find the screensaver file under &amp;ldquo;Products&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Right-click on it &amp;amp; select &amp;ldquo;Open with External Editor.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;This will open System Preferences and install the screensaver. (The first time, you&amp;rsquo;ll have to select the screensaver here).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;![Install the screensaver](/posts/2020/04/13/screensavers/2. screensaver install.png)
&lt;em&gt;Install the screensaver&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;add-a-mac-app-target-to-make-testing-easier&#34;&gt;Add a mac app target to make testing easier&lt;/h1&gt;
&lt;p&gt;Troubleshooting screensavers is a pain in the butt. I highly recommend doing the bulk of your development using a mac app target. Then make sure to test it in screensaver mode, as this is treated a bit differently by macOS.&lt;/p&gt;
&lt;p&gt;First, add a new target:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select your project on the left.&lt;/li&gt;
&lt;li&gt;Under &amp;ldquo;Targets&amp;rdquo;, at the bottom select the &amp;ldquo;+&amp;rdquo; button.&lt;/li&gt;
&lt;li&gt;Under &amp;ldquo;macOS&amp;rdquo;, select &amp;ldquo;App&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Continue with the prompts. I suggest naming it something like &amp;ldquo;Preview&amp;rdquo;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;![Setup the Mac target](/posts/2020/04/13/screensavers/3. mac target.png)
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Hook up your mac app to the screensaver code you have. We need to expose the screensaver view class (and any other code you have written or will write):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select the file(s) on the left.&lt;/li&gt;
&lt;li&gt;On the right, select the File Inspector icon&lt;/li&gt;
&lt;li&gt;Under &amp;ldquo;Target Membership&amp;rdquo;, make sure your screensaver &amp;amp; mac app are selected.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;![Fix target membership](/posts/2020/04/13/screensavers/4. target membership.png)
&lt;em&gt;Fix target membership&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll need to fake the animation in the mac app. Here is some stub code for a view controller (this should only have the mac app as a target):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;AppKit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PreviewViewController&lt;/span&gt;: NSViewController {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; screensaverView: GreenSquareScreenSaverView? = &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; timer: Timer? = &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; isAnimating: Bool = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;didSet&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            toggleAnimationTimer()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loadView&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        screensaverView = GreenSquareScreenSaverView(frame: CGRect.zero, isPreview: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;self&lt;/span&gt;.view = screensaverView ?? NSView()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;viewDidAppear&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.viewDidAppear()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        isAnimating = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;viewWillDisappear&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.viewWillDisappear()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        isAnimating = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;toggleAnimationTimer&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isAnimating {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; timer == &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                timer = Timer.scheduledTimer(withTimeInterval: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30.0&lt;/span&gt;, repeats: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;) { [&lt;span style=&#34;color:#66d9ef&#34;&gt;weak&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;self&lt;/span&gt;] (&lt;span style=&#34;color:#66d9ef&#34;&gt;_&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;self&lt;/span&gt;?.animate()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; timer = timer {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                timer.invalidate()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;self&lt;/span&gt;.timer = &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animate&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isAnimating, &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; screensaverView = screensaverView {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            screensaverView.animateOneFrame()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then in your &lt;code&gt;AppDelegate&lt;/code&gt;, you can instantiate your &lt;code&gt;PreviewViewController&lt;/code&gt; and pass it to the window:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Cocoa&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;@NSApplicationMain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;AppDelegate&lt;/span&gt;: NSObject, NSApplicationDelegate {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; window: NSWindow!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; previewViewController: PreviewViewController?
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;applicationDidFinishLaunching&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;_&lt;/span&gt; aNotification: Notification) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; previewViewController = PreviewViewController()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;self&lt;/span&gt;.previewViewController = previewViewController
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// Create the window and set the content view. &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        window = NSWindow(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            contentRect: NSRect(x: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, y: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, width: &lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, height: &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            styleMask: [.titled, .closable, .miniaturizable, .resizable, .fullSizeContentView],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            backing: .buffered, &lt;span style=&#34;color:#66d9ef&#34;&gt;defer&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        window.center()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        window.setFrameAutosaveName(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Main Window&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        window.contentView = previewViewController.view
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        window.makeKeyAndOrderFront(&lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now if you build &amp;amp; run the Preview mac app, you&amp;rsquo;ll have your screensaver running inside the app, and tied to Xcode for debugging, stepping through code, troubleshooting, etc.&lt;/p&gt;
&lt;p&gt;You should see a single window with a black background color.&lt;/p&gt;
&lt;h1 id=&#34;write-code&#34;&gt;Write code!&lt;/h1&gt;
&lt;p&gt;If you want to eventually port your code to iOS or tvOS, you may want to stick with something like layers (CALayer) that are easy to use cross-platform. But if you&amp;rsquo;re focused on screensavers, AppKit is the mac corollary of UIKit, which you might be familiar with if you&amp;rsquo;ve built iOS apps. &lt;code&gt;NSView&lt;/code&gt; and &lt;code&gt;NSViewController&lt;/code&gt; are your friends!&lt;/p&gt;
&lt;p&gt;For now, let&amp;rsquo;s add a little green square and rotate it, so you don&amp;rsquo;t have to stare at a blank screensaver. Create a new Swift file &lt;code&gt;GreenSquareView&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GreenSquareView&lt;/span&gt;: NSView {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;(frame: .zero)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        wantsLayer = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        layer?.backgroundColor = NSColor.green.cgColor
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;required&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;?(coder: NSCoder) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fatalError(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;init(coder:) has not been implemented&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s update a few things in your ScreenSaverView subclass. Create a property:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; greenSquareView = GreenSquareView()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then, in the &lt;code&gt;init()&lt;/code&gt;, add:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addSubview(greenSquareView)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We&amp;rsquo;ll resize the frame in &lt;code&gt;draw()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;_&lt;/span&gt; rect: NSRect) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.draw(rect)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; squareFrame = NSRect.zero
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        squareFrame.size = NSSize(width: &lt;span style=&#34;color:#ae81ff&#34;&gt;150&lt;/span&gt;, height: &lt;span style=&#34;color:#ae81ff&#34;&gt;150&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        squareFrame.origin.x = (rect.width &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; squareFrame.width) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        squareFrame.origin.y = (rect.height &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; squareFrame.height) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        greenSquareView.frame = squareFrame
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And we can animate it in the stub &lt;code&gt;animateOneFrame()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animateOneFrame&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        greenSquareView.rotate(byDegrees: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So if we put that together, our &lt;code&gt;GreenSquareScreenSaverView&lt;/code&gt; now looks like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Foundation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ScreenSaver&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GreenSquareScreenSaverView&lt;/span&gt;: ScreenSaverView {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; greenSquareView = GreenSquareView()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;?(frame: CGRect, isPreview: Bool) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;(frame: frame, isPreview: isPreview)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;self&lt;/span&gt;.animationTimeInterval = &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        addSubview(greenSquareView)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;required&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;?(coder: NSCoder) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fatalError(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;init(coder:) has not been implemented&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;startAnimation&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.startAnimation()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stopAnimation&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.stopAnimation()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;_&lt;/span&gt; rect: NSRect) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;.draw(rect)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; squareFrame = NSRect.zero
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        squareFrame.size = NSSize(width: &lt;span style=&#34;color:#ae81ff&#34;&gt;150&lt;/span&gt;, height: &lt;span style=&#34;color:#ae81ff&#34;&gt;150&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        squareFrame.origin.x = (rect.width &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; squareFrame.width) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        squareFrame.origin.y = (rect.height &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; squareFrame.height) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        greenSquareView.frame = squareFrame
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animateOneFrame&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        greenSquareView.rotate(byDegrees: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;animation&#34;&gt;Animation&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;ScreenSaverView&lt;/code&gt; class offers you a straightforward way to animate, if what you want to do involves regular updates, like a rotating green square. But that should not restrict you from doing your own CoreAnimation or NSAnimation.&lt;/p&gt;
&lt;h1 id=&#34;swift-classes-beware-beware-be-aware&#34;&gt;Swift classes: beware, beware, be aware&lt;/h1&gt;
&lt;p&gt;There&amp;rsquo;s a fun little bug where sometimes when you create a Swift class, macOS will try to instantiate it &lt;em&gt;as a ScreenSaverView&lt;/em&gt;. Your screensaver will quietly crash, but you&amp;rsquo;ll see a black screen. You can dive into the Console.app, where you might find that it&amp;rsquo;s trying to call:
&lt;code&gt;-[GreenSquare.GreenSquareView initWithFrame:isPreview:]: unrecognized selector sent to instance 0x7fd13af16950&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Fortunately, there&amp;rsquo;s an easy fix!&lt;/p&gt;
&lt;p&gt;Back in Xcode, select your project on the left, then your screensaver target, then &amp;ldquo;Build Phases&amp;rdquo;. Under &amp;ldquo;Compile Sources&amp;rdquo;, ensure that your ScreenSaverView subclass is the &lt;em&gt;first&lt;/em&gt; Swift file.&lt;/p&gt;
&lt;p&gt;![Fix Build Phases](/posts/2020/04/13/screensavers/5. compile sources fix.png)
&lt;em&gt;Fix Build Phases&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;code&#34;&gt;Code!&lt;/h1&gt;
&lt;p&gt;The code mentioned here is over on &lt;a href=&#34;https://github.com/rhaining/screensaver-demo&#34;&gt;github.com/rhaining/screensaver-demo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;![App preview](/posts/2020/04/13/screensavers/6. app preview.png)
&lt;em&gt;App preview&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;what-else&#34;&gt;What else?&lt;/h1&gt;
&lt;p&gt;What else do you want to learn? Hit me up: &lt;a href=&#34;mailto:mail@tolar.town&#34;&gt;mail@tolar.town&lt;/a&gt; or on twitter &lt;a href=&#34;https://twitter.com/tolar&#34;&gt;@tolar&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;other-screensavers&#34;&gt;Other screensavers&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;ve published a couple of screensavers this year, if you want to check them out.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kindofawesome.com/screensaver/&#34;&gt;Presidential Hopefuls&lt;/a&gt; visualizes polling data in a fun, weird way.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zooooom.us/&#34;&gt;Zooooom&lt;/a&gt; is a parody of a zoom call that I built with my friend &lt;a href=&#34;https://harperreed.com/&#34;&gt;Harper&lt;/a&gt;. You can check out the source code at &lt;a href=&#34;https://github.com/rhaining/zooooom-screensaver&#34;&gt;github.com/rhaining/zooooom-screensaver&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check them out and let me know what you think!&lt;/p&gt;
</description>
        </item>

      
    
      
      

        <item>
          <title>The New York Easter Parade lives on!</title>
          <link>https://tolar.town/posts/2020/04/13/easter-parade/</link>
          <pubDate>Mon, 13 Apr 2020 15:32:00 -0400</pubDate>
          
          <guid>https://tolar.town/posts/2020/04/13/easter-parade/</guid>
          <description>&lt;p&gt;Every Easter Sunday on 5th Avenue in Midtown Manhattan, outside St Patrick&amp;rsquo;s Cathedral, there is an Easter Parade. It&amp;rsquo;s bananas. You see everything from traditional Easter bonnets to outlandish performance art projects to political statements.&lt;/p&gt;
&lt;p&gt;This being a pandemic year, they couldn&amp;rsquo;t have the traditional gathering, so one group put together a Zoom call, complete with multiple rooms, dance parties with various styles of music, and a promenade, where folks could virtually &amp;ldquo;raise their hand&amp;rdquo; to show off their outfits.  Here are some I took pictures of. Check them out!&lt;/p&gt;
&lt;p&gt;The Zoom Easter parade was also a fundraiser for Stonewall Village NYC. Support them by &lt;a href=&#34;https://bit.ly/easter-donate&#34;&gt;donating on their site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/easter-parade/batch1.jpeg&#34; alt=&#34;Easter parade promenade&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/easter-parade/batch2.jpeg&#34; alt=&#34;Easter parade promenade&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/easter-parade/batch3.jpeg&#34; alt=&#34;Easter parade promenade&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/easter-parade/batch4.jpeg&#34; alt=&#34;Easter parade promenade&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/easter-parade/batch5.jpeg&#34; alt=&#34;Easter parade promenade&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/easter-parade/batch6.jpeg&#34; alt=&#34;Easter parade promenade&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/easter-parade/batch7.jpeg&#34; alt=&#34;Easter parade promenade&#34;&gt;&lt;/p&gt;
&lt;p&gt;I took some pictures at the 2017 parade ‚Äì if you want to see the real deal, check them at at &lt;a href=&#34;https://flickr.com/photos/tolar/albums/72157679478373943&#34;&gt;Flickr&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>

      
    
      
      

        <item>
          <title>Life in New York under PAUSE</title>
          <link>https://tolar.town/posts/2020/04/13/pause/</link>
          <pubDate>Mon, 13 Apr 2020 12:01:00 -0400</pubDate>
          
          <guid>https://tolar.town/posts/2020/04/13/pause/</guid>
          <description>&lt;p&gt;It has been 4 weeks since Governor Andrew Cuomo shut down non-essential businesses in New York. He would later expand it to the New York PAUSE, similar to many other governmental policies called lockdown, shelter-in-place, and the like. The new normal has become wearing masks &amp;amp; gloves during the rare times I leave my apartment: to Foodtown, BQE Liquor &amp;amp; Wines, Meathook, or for a walk around the neighborhood, trying my best to avoid the swarms of people in parks or huddled around the newly minted takeout windows at bars &amp;amp; pizzerias.&lt;/p&gt;
&lt;p&gt;I have been cooking and baking a lot! A few items I&amp;rsquo;ve been especially happy about: roast chicken, ribs, oatmeal creme pies, roast pork, New Mexican style pork (&amp;ldquo;carne adovada&amp;rdquo;), dill shrimp orzo salad, brisket, burrito pie, nachos. I also started experimenting with breads: no-knead loaves, white bread, english muffins, flour tortillas.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve also loved the video calls that have popped up in place of happy hours, brunches, virtual dinners, Easter parades, dance parties.&lt;/p&gt;
&lt;p&gt;I bought a full-sized digital piano with weighted keys, which I&amp;rsquo;ve been enjoying relearning, and which provides a nice break from the monotony of lockdown. And I started playing Animal Crossing on Switch, which is pretty fun.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/pause/grocery-store.jpeg&#34; alt=&#34;Foodtown&#34;&gt;
&lt;em&gt;Foodtown, the Friday before the lockdown began. It took 45 minutes just to check out. During normal times, there&amp;rsquo;s at most 1-2 people ahead of me in the checkout line.&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/pause/home.jpeg&#34; alt=&#34;Home&#34;&gt;
&lt;em&gt;At home: the weird final Democratic primary debate, where Bernie &amp;amp; Joe social distanced; me wearing my first mask; and my new piano.&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/pause/food.jpeg&#34; alt=&#34;Food&#34;&gt;
&lt;em&gt;Food! Bread, ribs &amp;amp; green beans, Ritz chicken &amp;amp; brussels, burrito pie, brisket nachos, oatmeal creme pies, white loaf, brisket tacos, english muffins.&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/pause/calls.jpeg&#34; alt=&#34;Video calls&#34;&gt;
&lt;em&gt;A lot more video calls these days! Family chat, virtual dinners, remote stretch, tfw dance party, karaoke crew sans any real karaoke.&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/pause/store-signs.jpeg&#34; alt=&#34;Neighborhood store signs&#34;&gt;
&lt;em&gt;Neighborhood store signs: Pharmacy, Allswell, Egg, Brooklinen, Van Leeuwen, Muji, Two Boots, Fellow Barber, Teddy&amp;rsquo;s, Junk, Egg, Hive.&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/04/13/pause/out-and-about.jpeg&#34; alt=&#34;Out and about&#34;&gt;
&lt;em&gt;Out and about: city warnings, street art warnings, dance party, cops observing the park attendees, USPS social distancing, street art inspiration, Spring, Ghostbeard, Billy Barnacles, Meathook social distancing, playground closed, park social distancing, and friends&amp;rsquo; social distancing.&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
</description>
        </item>

      
    
      
      

        <item>
          <title>New Orleans: Architecture in the French Quarter</title>
          <link>https://tolar.town/posts/2020/01/27/architecture/</link>
          <pubDate>Mon, 27 Jan 2020 09:00:10 -0500</pubDate>
          
          <guid>https://tolar.town/posts/2020/01/27/architecture/</guid>
          <description>&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/architecture/french-quarter-royal2.jpeg&#34; alt=&#34;French Quarter: Royal Street&#34;&gt;
&lt;em&gt;French Quarter: Royal Street&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/architecture/french-quarter-royal3.jpeg&#34; alt=&#34;French Quarter: Royal Street&#34;&gt;
&lt;em&gt;French Quarter: Royal Street&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/architecture/french-quarter-royal.jpeg&#34; alt=&#34;French Quarter: Royal Street&#34;&gt;
&lt;em&gt;French Quarter: Royal Street&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/architecture/french-quarter-chartres.jpeg&#34; alt=&#34;French Quarter: Chartres Street&#34;&gt;
&lt;em&gt;French Quarter: Chartres Street&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/architecture/french-quarter-decatur.jpeg&#34; alt=&#34;French Quarter: Decatur Street&#34;&gt;
&lt;em&gt;French Quarter: Decatur Street&lt;/em&gt;&lt;/p&gt;
</description>
        </item>

      
    
      
      

        <item>
          <title>New Orleans!</title>
          <link>https://tolar.town/posts/2020/01/27/new-orleans/</link>
          <pubDate>Mon, 27 Jan 2020 09:00:10 -0500</pubDate>
          
          <guid>https://tolar.town/posts/2020/01/27/new-orleans/</guid>
          <description>&lt;p&gt;Over MLK weekend, I went to New Orleans with some friends. It was my first visit there, but we jam-packed the weekend with lots of good food, drinks, catching up, walking around, listening to music. Oh yeah, and holding alligators in a swamp boat.&lt;/p&gt;
&lt;p&gt;I split up the pictures across a few posts. Check them out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tolar.town/posts/2020/01/27/architecture/&#34;&gt;Architecture in the French Quarter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tolar.town/posts/2020/01/27/street/&#34;&gt;Walking the streets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tolar.town/posts/2020/01/27/music/&#34;&gt;Music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tolar.town/posts/2020/01/27/food/&#34;&gt;Food&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tolar.town/posts/2020/01/27/dranks/&#34;&gt;Bars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tolar.town/posts/2020/01/27/swamp/&#34;&gt;Swamp tour&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tolar.town/posts/2020/01/27/shopping/&#34;&gt;Shopping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tolar.town/posts/2020/01/27/weird/&#34;&gt;A few random things&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>

      
    
      
      

        <item>
          <title>New Orleans: walking the streets</title>
          <link>https://tolar.town/posts/2020/01/27/street/</link>
          <pubDate>Mon, 27 Jan 2020 09:00:09 -0500</pubDate>
          
          <guid>https://tolar.town/posts/2020/01/27/street/</guid>
          <description>&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/street/clint-tolar.jpeg&#34; alt=&#34;Clint &amp;amp; Tolar&#34;&gt;
&lt;em&gt;Clint &amp;amp; Tolar&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/street/rev-zombie-house-of-voodoo.jpeg&#34; alt=&#34;&#34;&gt;
&lt;em&gt;Reverend Zombie&amp;rsquo;s House of Voodoo: Come on in and shop for a spell&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/street/dollar-sidewalk.jpeg&#34; alt=&#34;$$&#34;&gt;
&lt;em&gt;$$&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/street/mardi-gras-bros.jpeg&#34; alt=&#34;Mardi Gras bros&#34;&gt;
&lt;em&gt;We encountered many bros&lt;/em&gt;&lt;/p&gt;
</description>
        </item>

      
    
      
      

        <item>
          <title>New Orleans: the music</title>
          <link>https://tolar.town/posts/2020/01/27/music/</link>
          <pubDate>Mon, 27 Jan 2020 09:00:08 -0500</pubDate>
          
          <guid>https://tolar.town/posts/2020/01/27/music/</guid>
          <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
        </item>

      
    
      
      

        <item>
          <title>New Orleans: food</title>
          <link>https://tolar.town/posts/2020/01/27/food/</link>
          <pubDate>Mon, 27 Jan 2020 09:00:07 -0500</pubDate>
          
          <guid>https://tolar.town/posts/2020/01/27/food/</guid>
          <description>&lt;p&gt;Y&amp;rsquo;all, the food.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/willa-jean-biscuit-sandwich.jpeg&#34; alt=&#34;Willa Jean: biscuit sandwich&#34;&gt;
&lt;em&gt;Willa Jean: a biscuit with egg, sausage, &amp;amp; pimiento cheese&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/willa-jean-shrimp-grits.jpeg&#34; alt=&#34;Willa Jean: shrimp &amp;amp; grits&#34;&gt;
&lt;em&gt;Willa Jean: shrimp &amp;amp; grits, with etoufee gravy&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/country-club-selfie.jpeg&#34; alt=&#34;Country Club: the crew&#34;&gt;
&lt;em&gt;Country Club: the crew&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/country-club-cocktail.jpeg&#34; alt=&#34;Country Club: a drink&#34;&gt;
&lt;em&gt;Country Club: a drink (along with blurry Jacqui &amp;amp; Clint)&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/country-club-wall-flowers.jpeg&#34; alt=&#34;Country Club: wall flowers&#34;&gt;
&lt;em&gt;Country Club: wall flowers&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/country-club-tacos.jpeg&#34; alt=&#34;Country Club: tacos&#34;&gt;
&lt;em&gt;Country Club: tacos&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/killer-poboys.jpeg&#34; alt=&#34;Killer Poboys: ham &amp;amp; pimiento cheese&#34;&gt;
&lt;em&gt;Killer Poboys: ham &amp;amp; pimiento cheese&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/cafe-du-monde-beignets.jpeg&#34; alt=&#34;Cafe du Monde: beignets &amp;amp; coffee&#34;&gt;
&lt;em&gt;Cafe du Monde: beignets &amp;amp; coffee&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/cafe-du-monde-staff.jpeg&#34; alt=&#34;Cafe du Monde: staff&#34;&gt;
&lt;em&gt;Cafe du Monde: staff&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/antoines-setting.jpeg&#34; alt=&#34;Antoine&amp;rsquo;s: place setting&#34;&gt;
&lt;em&gt;Antoine&amp;rsquo;s: place setting&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/antoines-gumbo.jpeg&#34; alt=&#34;Antoine&amp;rsquo;s: gumbo&#34;&gt;
&lt;em&gt;Antoine&amp;rsquo;s: gumbo&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/antoines-steak.jpeg&#34; alt=&#34;Antoine&amp;rsquo;s: steak&#34;&gt;
&lt;em&gt;Antoine&amp;rsquo;s: steak with soft-shelled crab and lump crab meat, and asparagus&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/antoines-baked-alaska.jpeg&#34; alt=&#34;Antoine&amp;rsquo;s: baked alaska&#34;&gt;
&lt;em&gt;Antoine&amp;rsquo;s: baked alaska&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/antoines-baked-alaska-slice.jpeg&#34; alt=&#34;Antoine&amp;rsquo;s: baked alaska slice&#34;&gt;
&lt;em&gt;Antoine&amp;rsquo;s: baked alaska slice&lt;/em&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tolar.town/posts/2020/01/27/food/antoines-double-tolar.jpeg&#34; alt=&#34;Antoine&amp;rsquo;s: two Tolars&#34;&gt;
&lt;em&gt;Antoine&amp;rsquo;s: Tolar, Peter, Adam, Jacqui, Tolar (üì∑ Clint)&lt;/em&gt;&lt;/p&gt;
</description>
        </item>

      
    
  </channel>
</rss>
